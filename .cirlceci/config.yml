version: 2.1
jobs:
  install:
    docker:
      - image: circleci/node:12
    steps:
      - run:
          name: Install stuff
          command: yarn install
  build:
    docker:
      - image: circleci/node:12
    steps:
      - run:
          name: Install stuff
          command: yarn install
     
      - save_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - npm-v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules
        
  test:
      docker:
        - image: circleci/node:12
      steps:
        - checkout
        -restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - npm-v1-dependencies-{{ checksum "yarn.lock" }}
        - run :
            name: add lint
            command : yarn lint 
        - run :
            name : add format 
            command: yarn format:check
        - run :
            name: unit test
            command:  yarn test:ci

  database:
    docker: 
      - image: circleci/node:12
        auth:
            username: admin
            password: $DOCKERHUB_PASSWORD 
        environment:
            PG_HOST: localhost
            PG_USER: ubuntu
            RAILS_ENV: test
            RACK_ENV: test
    steps : 
      - checkout
      - run:
          name: Set up DB
          command: yarn test:e2e
        environment:
          DATABASE_URL: "postgres://psqluer:psqlpassword@localhost:5432/psdb"

  artifact :
    docker : 
      - image: circleci/node:12
       auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference

    working_directory: /tmp
    steps:
      - run:
          name: Creating Dummy Artifacts
          command: |
            yarn doc:build
      - store_artifacts:
          path: /docs
workflows:
  version: 2
  build_and_test:
    jobs:
      - install
      - build
      - test
      - database
      - artifact
  
